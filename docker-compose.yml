version: '3.8'
services:

  mysql:
    image: mysql:8
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE:   ${MYSQL_DATABASE}
      MYSQL_USER:       ${MYSQL_USER}
      MYSQL_PASSWORD:   ${MYSQL_PASSWORD}
    volumes:
      - ./bdd:/docker-entrypoint-initdb.d:ro
    ports:
      - "3307:3306"
    networks:
      - app-net

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-net

  backend:
    build:
      context: ./back/poc_chat
      dockerfile: Dockerfile
    depends_on:
      - mysql
      - rabbitmq
    environment:
      SPRING_DATASOURCE_URL:      jdbc:mysql://mysql:3306/${MYSQL_DATABASE}?useSSL=false&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
      SPRING_RABBITMQ_USERNAME:   ${RABBITMQ_DEFAULT_USER}
      SPRING_RABBITMQ_PASSWORD:   ${RABBITMQ_DEFAULT_PASS}
      JWT_SECRET:                ${JWT_SECRET}
      JWT_EXPIRATION_MS:         ${JWT_EXPIRATION_MS}
    ports:
      - "8080:8080"
    networks:
      - app-net

  front:
    build:
      context: ./front/ycyw
      dockerfile: Dockerfile
    depends_on:
      - backend
    environment:
      API_URL: http://localhost:8080/api
      WS_URL:  ws://localhost:8080/ws-chat
    ports:
      - "4200:4200"
    networks:
      - app-net

networks:
  app-net:
    driver: bridge
